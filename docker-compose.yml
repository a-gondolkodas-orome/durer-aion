version: "3"
services:
  web:
    build: ./apps/online-frontend/nginx
    ports:
      - 80:80
    volumes:
      - ./apps/online-frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend
  backend:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRESQL_PASSWORD}@postgres/postgres
      - PORT=8000
      - BOT_CREDENTIALS=${BOT_CREDENTIALS}
      - ADMIN_CREDENTIALS=${ADMIN_CREDENTIALS}
      - GAME_GLOBAL_START_T=${GAME_GLOBAL_START_T}
      - GAME_GLOBAL_END_T=${GAME_GLOBAL_END_T}
      - REACT_APP_PROBLEMS_S3_REGION=${REACT_APP_PROBLEMS_S3_REGION} # optional, defaults to 'eu-north-1'
      - REACT_APP_PROBLEMS_S3_KEY_ID=${REACT_APP_PROBLEMS_S3_KEY_ID}
      - REACT_APP_PROBLEMS_S3_SECRET_KEY=${REACT_APP_PROBLEMS_S3_SECRET_KEY}
      - REACT_APP_PROBLEMS_S3_BUCKET_NAME=${REACT_APP_PROBLEMS_S3_BUCKET_NAME}
    volumes:
      # Mount backend source
      - ./apps/online-backend/src:/usr/src/app/apps/online-backend/src
      # Mount shared packages
      - ./packages/game:/usr/src/app/packages/game
      - ./packages/schemas:/usr/src/app/packages/schemas
      - ./packages/strategy:/usr/src/app/packages/strategy
      # Keep node_modules from image (avoid reinstall each time)
      # - /usr/src/app/node_modules
      # Keep dist from image (so build output survives)
      - /usr/src/app/apps/online-backend/dist
    depends_on:
      - postgres
  postgres:
    image: bitnami/postgresql
    volumes:
      - postgresdb:/var/lib/postgresql/data
    environment:
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
volumes:
  postgresdb: {}
